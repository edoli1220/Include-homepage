{"revisions":{"1337436054768":{"ts":1337436054768,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*\n*\tUpload files to the server using HTML 5 Drag and drop the folders on your local computer\n*\n*\tTested on:\n*\tMozilla Firefox 3.6.12\n*\tGoogle Chrome 7.0.517.41\n*\tSafari 5.0.2\n*\tSafari na iPad\n*\tWebKit r70732\n*\n*\tThe current version does not work on:\n*\tOpera 10.63 \n*\tOpera 11 alpha\n*\tIE 6+\n*/\n\nfunction uploader(place, status, targetPHP, show) {\n\t\n\t// Upload image files\n\tupload = function(file) {\n\t\n\t\t// Firefox 3.6, Chrome 6, WebKit\n\t\tif(window.FileReader) { \n\t\t\t\t\n\t\t\t// Once the process of reading file\n\t\t\tthis.loadEnd = function() {\n\t\t\t\tbin = reader.result;\t\t\t\t\n\t\t\t\txhr = new XMLHttpRequest();\n\t\t\t\txhr.open('POST', targetPHP+'?up=true', true);\n\t\t\t\tvar boundary = 'xxxxxxxxx';\n\t \t\t\tvar body = '--' + boundary + \"\\r\\n\";  \n\t\t\t\tbody += \"Content-Disposition: form-data; name='upload'; filename='\" + file.name + \"'\\r\\n\";  \n\t\t\t\tbody += \"Content-Type: application/octet-stream\\r\\n\\r\\n\";  \n\t\t\t\tbody += bin + \"\\r\\n\";  \n\t\t\t\tbody += '--' + boundary + '--';      \n\t\t\t\txhr.setRequestHeader('content-type', 'multipart/form-data; boundary=' + boundary);\n\t\t\t\t// Firefox 3.6 provides a feature sendAsBinary ()\n\t\t\t\tif(xhr.sendAsBinary != null) { \n\t\t\t\t\txhr.sendAsBinary(body); \n\t\t\t\t// Chrome 7 sends data but you must use the base64_decode on the PHP side\n\t\t\t\t} else { \n\t\t\t\t\txhr.open('POST', targetPHP+'?up=true&base64=true', true);\n\t\t\t\t\txhr.setRequestHeader('UP-FILENAME', file.name);\n\t\t\t\t\txhr.setRequestHeader('UP-SIZE', file.size);\n\t\t\t\t\txhr.setRequestHeader('UP-TYPE', file.type);\n\t\t\t\t\txhr.send(window.btoa(bin));\n\t\t\t\t}\n\t\t\t\tif (show) {\n\t\t\t\t\tvar newFile  = document.createElement('div');\n\t\t\t\t\tnewFile.innerHTML = 'Loaded : '+file.name+' size '+file.size+' B';\n\t\t\t\t\tdocument.getElementById(show).appendChild(newFile);\t\t\t\t\n\t\t\t\t}\n\t\t\t\tif (status) {\n\t\t\t\t\tdocument.getElementById(status).innerHTML = 'Loaded : 100%<br/>Next file ...';\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\n\t\t\t// Loading errors\n\t\t\tthis.loadError = function(event) {\n\t\t\t\tswitch(event.target.error.code) {\n\t\t\t\t\tcase event.target.error.NOT_FOUND_ERR:\n\t\t\t\t\t\tdocument.getElementById(status).innerHTML = 'File not found!';\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase event.target.error.NOT_READABLE_ERR:\n\t\t\t\t\t\tdocument.getElementById(status).innerHTML = 'File not readable!';\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase event.target.error.ABORT_ERR:\n\t\t\t\t\tbreak; \n\t\t\t\t\tdefault:\n\t\t\t\t\t\tdocument.getElementById(status).innerHTML = 'Read error.';\n\t\t\t\t}\t\n\t\t\t}\n\t\t\n\t\t\t// Reading Progress\n\t\t\tthis.loadProgress = function(event) {\n\t\t\t\tif (event.lengthComputable) {\n\t\t\t\t\tvar percentage = Math.round((event.loaded * 100) / event.total);\n\t\t\t\t\tdocument.getElementById(status).innerHTML = 'Loaded : '+percentage+'%';\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t\t\t\n\t\t\t// Preview images\n\t\t\tthis.previewNow = function(event) {\t\t\n\t\t\t\tbin = preview.result;\n\t\t\t\tvar img = document.createElement(\"img\"); \n\t\t\t\timg.className = 'addedIMG';\n\t\t\t    img.file = file;   \n\t\t\t    img.src = bin;\n\t\t\t\tdocument.getElementById(show).appendChild(img);\n\t\t\t}\n\n\t\treader = new FileReader();\n\t\t// Firefox 3.6, WebKit\n\t\tif(reader.addEventListener) { \n\t\t\treader.addEventListener('loadend', this.loadEnd, false);\n\t\t\tif (status != null) \n\t\t\t{\n\t\t\t\treader.addEventListener('error', this.loadError, false);\n\t\t\t\treader.addEventListener('progress', this.loadProgress, false);\n\t\t\t}\n\t\t\n\t\t// Chrome 7\n\t\t} else { \n\t\t\treader.onloadend = this.loadEnd;\n\t\t\tif (status != null) \n\t\t\t{\n\t\t\t\treader.onerror = this.loadError;\n\t\t\t\treader.onprogress = this.loadProgress;\n\t\t\t}\n\t\t}\n\t\tvar preview = new FileReader();\n\t\t// Firefox 3.6, WebKit\n\t\tif(preview.addEventListener) { \n\t\t\tpreview.addEventListener('loadend', this.previewNow, false);\n\t\t// Chrome 7\t\n\t\t} else { \n\t\t\tpreview.onloadend = this.previewNow;\n\t\t}\n\t\t\n\t\t// The function that starts reading the file as a binary string\n     \treader.readAsBinaryString(file);\n\t     \n    \t// Preview uploaded files\n    \tif (show) {\n\t     \tpreview.readAsDataURL(file);\n\t \t}\n\t\t\n  \t\t// Safari 5 does not support FileReader\n\t\t} else {\n\t\t\txhr = new XMLHttpRequest();\n\t\t\txhr.open('POST', targetPHP+'?up=true', true);\n\t\t\txhr.setRequestHeader('UP-FILENAME', file.name);\n\t\t\txhr.setRequestHeader('UP-SIZE', file.size);\n\t\t\txhr.setRequestHeader('UP-TYPE', file.type);\n\t\t\txhr.send(file); \n\t\t\t\n\t\t\tif (status) {\n\t\t\t\tdocument.getElementById(status).innerHTML = 'Loaded : 100%';\n\t\t\t}\n\t\t\tif (show) {\n\t\t\t\tvar newFile  = document.createElement('div');\n\t\t\t\tnewFile.innerHTML = 'Loaded : '+file.name+' size '+file.size+' B';\n\t\t\t\tdocument.getElementById(show).appendChild(newFile);\n\t\t\t}\t\n\t\t}\t\t\t\t\n\t}\n\n\t// Function drop file\n\tthis.drop = function(event) {\n\t\tevent.preventDefault();\n\t \tvar dt = event.dataTransfer;\n\t \tvar files = dt.files;\n\t \tfor (var i = 0; i<files.length; i++) {\n\t\t\tvar file = files[i];\n\t\t\tupload(file);\n\t \t}\n\t}\n\t\n\t// The inclusion of the event listeners (DragOver and drop)\n\n\tthis.uploadPlace =  document.getElementById(place);\n\tthis.uploadPlace.addEventListener(\"dragover\", function(event) {\n\t\tevent.stopPropagation(); \n\t\tevent.preventDefault();\n\t}, true);\n\tthis.uploadPlace.addEventListener(\"drop\", this.drop, false); \n\n}\n\n\t"]],"start1":0,"start2":0,"length1":0,"length2":4941}]],"length":4941}}}