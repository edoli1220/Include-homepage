{"revisions":{"1337409479456":{"ts":1337409479456,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"\n/*\nLightbox v2.51\nby Lokesh Dhakar - http://www.lokeshdhakar.com\n\nFor more information, visit:\nhttp://lokeshdhakar.com/projects/lightbox2/\n\nLicensed under the Creative Commons Attribution 2.5 License - http://creativecommons.org/licenses/by/2.5/\n- free for use in both personal and commercial projects\n- attribution requires leaving author name, author link, and the license info intact\n\t\nThanks\n- Scott Upton(uptonic.com), Peter-Paul Koch(quirksmode.com), and Thomas Fuchs(mir.aculo.us) for ideas, libs, and snippets.\n- Artemy Tregubenko (arty.name) for cleanup and help in updating to latest proto-aculous in v2.05.\n\n\nTable of Contents\n=================\nLightboxOptions\n\nLightbox\n- constructor\n- init\n- enable\n- build\n- start\n- changeImage\n- sizeContainer\n- showImage\n- updateNav\n- updateDetails\n- preloadNeigbhoringImages\n- enableKeyboardNav\n- disableKeyboardNav\n- keyboardAction\n- end\n\noptions = new LightboxOptions\nlightbox = new Lightbox options\n*/\n\n(function() {\n  var $, Lightbox, LightboxOptions;\n\n  $ = jQuery;\n\n  LightboxOptions = (function() {\n\n    function LightboxOptions() {\n      this.fileLoadingImage = 'images/loading.gif';\n      this.fileCloseImage = 'images/close.png';\n      this.resizeDuration = 700;\n      this.fadeDuration = 500;\n      this.labelImage = \"Image\";\n      this.labelOf = \"of\";\n    }\n\n    return LightboxOptions;\n\n  })();\n\n  Lightbox = (function() {\n\n    function Lightbox(options) {\n      this.options = options;\n      this.album = [];\n      this.currentImageIndex = void 0;\n      this.init();\n    }\n\n    Lightbox.prototype.init = function() {\n      this.enable();\n      return this.build();\n    };\n\n    Lightbox.prototype.enable = function() {\n      var _this = this;\n      return $('body').on('click', 'a[rel^=lightbox], area[rel^=lightbox]', function(e) {\n        _this.start($(e.currentTarget));\n        return false;\n      });\n    };\n\n    Lightbox.prototype.build = function() {\n      var $lightbox,\n        _this = this;\n      $(\"<div>\", {\n        id: 'lightboxOverlay'\n      }).after($('<div/>', {\n        id: 'lightbox'\n      }).append($('<div/>', {\n        \"class\": 'lb-outerContainer'\n      }).append($('<div/>', {\n        \"class\": 'lb-container'\n      }).append($('<img/>', {\n        \"class\": 'lb-image'\n      }), $('<div/>', {\n        \"class\": 'lb-nav'\n      }).append($('<a/>', {\n        \"class\": 'lb-prev'\n      }), $('<a/>', {\n        \"class\": 'lb-next'\n      })), $('<div/>', {\n        \"class\": 'lb-loader'\n      }).append($('<a/>', {\n        \"class\": 'lb-cancel'\n      }).append($('<img/>', {\n        src: this.options.fileLoadingImage\n      }))))), $('<div/>', {\n        \"class\": 'lb-dataContainer'\n      }).append($('<div/>', {\n        \"class\": 'lb-data'\n      }).append($('<div/>', {\n        \"class\": 'lb-details'\n      }).append($('<span/>', {\n        \"class\": 'lb-caption'\n      }), $('<span/>', {\n        \"class\": 'lb-number'\n      })), $('<div/>', {\n        \"class\": 'lb-closeContainer'\n      }).append($('<a/>', {\n        \"class\": 'lb-close'\n      }).append($('<img/>', {\n        src: this.options.fileCloseImage\n      }))))))).appendTo($('body'));\n      $('#lightboxOverlay').hide().on('click', function(e) {\n        _this.end();\n        return false;\n      });\n      $lightbox = $('#lightbox');\n      $lightbox.hide().on('click', function(e) {\n        if ($(e.target).attr('id') === 'lightbox') _this.end();\n        return false;\n      });\n      $lightbox.find('.lb-outerContainer').on('click', function(e) {\n        if ($(e.target).attr('id') === 'lightbox') _this.end();\n        return false;\n      });\n      $lightbox.find('.lb-prev').on('click', function(e) {\n        _this.changeImage(_this.currentImageIndex - 1);\n        return false;\n      });\n      $lightbox.find('.lb-next').on('click', function(e) {\n        _this.changeImage(_this.currentImageIndex + 1);\n        return false;\n      });\n      $lightbox.find('.lb-loader, .lb-close').on('click', function(e) {\n        _this.end();\n        return false;\n      });\n    };\n\n    Lightbox.prototype.start = function($link) {\n      var $lightbox, $window, a, i, imageNumber, left, top, _len, _ref;\n      $(window).on(\"resize\", this.sizeOverlay);\n      $('select, object, embed').css({\n        visibility: \"hidden\"\n      });\n      $('#lightboxOverlay').width($(document).width()).height($(document).height()).fadeIn(this.options.fadeDuration);\n      this.album = [];\n      imageNumber = 0;\n      if ($link.attr('rel') === 'lightbox') {\n        this.album.push({\n          link: $link.attr('href'),\n          title: $link.attr('title')\n        });\n      } else {\n        _ref = $($link.prop(\"tagName\") + '[rel=\"' + $link.attr('rel') + '\"]');\n        for (i = 0, _len = _ref.length; i < _len; i++) {\n          a = _ref[i];\n          this.album.push({\n            link: $(a).attr('href'),\n            title: $(a).attr('title')\n          });\n          if ($(a).attr('href') === $link.attr('href')) imageNumber = i;\n        }\n      }\n      $window = $(window);\n      top = $window.scrollTop() + $window.height() / 10;\n      left = $window.scrollLeft();\n      $lightbox = $('#lightbox');\n      $lightbox.css({\n        top: top + 'px',\n        left: left + 'px'\n      }).fadeIn(this.options.fadeDuration);\n      this.changeImage(imageNumber);\n    };\n\n    Lightbox.prototype.changeImage = function(imageNumber) {\n      var $image, $lightbox, preloader,\n        _this = this;\n      this.disableKeyboardNav();\n      $lightbox = $('#lightbox');\n      $image = $lightbox.find('.lb-image');\n      this.sizeOverlay();\n      $('#lightboxOverlay').fadeIn(this.options.fadeDuration);\n      $('.loader').fadeIn('slow');\n      $lightbox.find('.lb-image, .lb-nav, .lb-prev, .lb-next, .lb-dataContainer, .lb-numbers, .lb-caption').hide();\n      $lightbox.find('.lb-outerContainer').addClass('animating');\n      preloader = new Image;\n      preloader.onload = function() {\n        $image.attr('src', _this.album[imageNumber].link);\n        $image.width = preloader.width;\n        $image.height = preloader.height;\n        return _this.sizeContainer(preloader.width, preloader.height);\n      };\n      preloader.src = this.album[imageNumber].link;\n      this.currentImageIndex = imageNumber;\n    };\n\n    Lightbox.prototype.sizeOverlay = function() {\n      return $('#lightboxOverlay').width($(document).width()).height($(document).height());\n    };\n\n    Lightbox.prototype.sizeContainer = function(imageWidth, imageHeight) {\n      var $container, $lightbox, $outerContainer, containerBottomPadding, containerLeftPadding, containerRightPadding, containerTopPadding, newHeight, newWidth, oldHeight, oldWidth,\n        _this = this;\n      $lightbox = $('#lightbox');\n      $outerContainer = $lightbox.find('.lb-outerContainer');\n      oldWidth = $outerContainer.outerWidth();\n      oldHeight = $outerContainer.outerHeight();\n      $container = $lightbox.find('.lb-container');\n      containerTopPadding = parseInt($container.css('padding-top'), 10);\n      containerRightPadding = parseInt($container.css('padding-right'), 10);\n      containerBottomPadding = parseInt($container.css('padding-bottom'), 10);\n      containerLeftPadding = parseInt($container.css('padding-left'), 10);\n      newWidth = imageWidth + containerLeftPadding + containerRightPadding;\n      newHeight = imageHeight + containerTopPadding + containerBottomPadding;\n      if (newWidth !== oldWidth && newHeight !== oldHeight) {\n        $outerContainer.animate({\n          width: newWidth,\n          height: newHeight\n        }, this.options.resizeDuration, 'swing');\n      } else if (newWidth !== oldWidth) {\n        $outerContainer.animate({\n          width: newWidth\n        }, this.options.resizeDuration, 'swing');\n      } else if (newHeight !== oldHeight) {\n        $outerContainer.animate({\n          height: newHeight\n        }, this.options.resizeDuration, 'swing');\n      }\n      setTimeout(function() {\n        $lightbox.find('.lb-dataContainer').width(newWidth);\n        $lightbox.find('.lb-prevLink').height(newHeight);\n        $lightbox.find('.lb-nextLink').height(newHeight);\n        _this.showImage();\n      }, this.options.resizeDuration);\n    };\n\n    Lightbox.prototype.showImage = function() {\n      var $lightbox;\n      $lightbox = $('#lightbox');\n      $lightbox.find('.lb-loader').hide();\n      $lightbox.find('.lb-image').fadeIn('slow');\n      this.updateNav();\n      this.updateDetails();\n      this.preloadNeighboringImages();\n      this.enableKeyboardNav();\n    };\n\n    Lightbox.prototype.updateNav = function() {\n      var $lightbox;\n      $lightbox = $('#lightbox');\n      $lightbox.find('.lb-nav').show();\n      if (this.currentImageIndex > 0) $lightbox.find('.lb-prev').show();\n      if (this.currentImageIndex < this.album.length - 1) {\n        $lightbox.find('.lb-next').show();\n      }\n    };\n\n    Lightbox.prototype.updateDetails = function() {\n      var $lightbox,\n        _this = this;\n      $lightbox = $('#lightbox');\n      if (typeof this.album[this.currentImageIndex].title !== 'undefined' && this.album[this.currentImageIndex].title !== \"\") {\n        $lightbox.find('.lb-caption').html(this.album[this.currentImageIndex].title).fadeIn('fast');\n      }\n      if (this.album.length > 1) {\n        $lightbox.find('.lb-number').html(this.options.labelImage + ' ' + (this.currentImageIndex + 1) + ' ' + this.options.labelOf + '  ' + this.album.length).fadeIn('fast');\n      } else {\n        $lightbox.find('.lb-number').hide();\n      }\n      $lightbox.find('.lb-outerContainer').removeClass('animating');\n      $lightbox.find('.lb-dataContainer').fadeIn(this.resizeDuration, function() {\n        return _this.sizeOverlay();\n      });\n    };\n\n    Lightbox.prototype.preloadNeighboringImages = function() {\n      var preloadNext, preloadPrev;\n      if (this.album.length > this.currentImageIndex + 1) {\n        preloadNext = new Image;\n        preloadNext.src = this.album[this.currentImageIndex + 1].link;\n      }\n      if (this.currentImageIndex > 0) {\n        preloadPrev = new Image;\n        preloadPrev.src = this.album[this.currentImageIndex - 1].link;\n      }\n    };\n\n    Lightbox.prototype.enableKeyboardNav = function() {\n      $(document).on('keyup.keyboard', $.proxy(this.keyboardAction, this));\n    };\n\n    Lightbox.prototype.disableKeyboardNav = function() {\n      $(document).off('.keyboard');\n    };\n\n    Lightbox.prototype.keyboardAction = function(event) {\n      var KEYCODE_ESC, KEYCODE_LEFTARROW, KEYCODE_RIGHTARROW, key, keycode;\n      KEYCODE_ESC = 27;\n      KEYCODE_LEFTARROW = 37;\n      KEYCODE_RIGHTARROW = 39;\n      keycode = event.keyCode;\n      key = String.fromCharCode(keycode).toLowerCase();\n      if (keycode === KEYCODE_ESC || key.match(/x|o|c/)) {\n        this.end();\n      } else if (key === 'p' || keycode === KEYCODE_LEFTARROW) {\n        if (this.currentImageIndex !== 0) {\n          this.changeImage(this.currentImageIndex - 1);\n        }\n      } else if (key === 'n' || keycode === KEYCODE_RIGHTARROW) {\n        if (this.currentImageIndex !== this.album.length - 1) {\n          this.changeImage(this.currentImageIndex + 1);\n        }\n      }\n    };\n\n    Lightbox.prototype.end = function() {\n      this.disableKeyboardNav();\n      $(window).off(\"resize\", this.sizeOverlay);\n      $('#lightbox').fadeOut(this.options.fadeDuration);\n      $('#lightboxOverlay').fadeOut(this.options.fadeDuration);\n      return $('select, object, embed').css({\n        visibility: \"visible\"\n      });\n    };\n\n    return Lightbox;\n\n  })();\n\n  $(function() {\n    var lightbox, options;\n    options = new LightboxOptions;\n    return lightbox = new Lightbox(options);\n  });\n\n}).call(this);\n"]],"start1":0,"start2":0,"length1":0,"length2":11597}]],"length":11597},"1337409495886":{"contributors":[],"silentsave":false,"ts":1337409495886,"patch":[[{"diffs":[[0,"ingImage = '"],[1,"/"],[0,"images/loadi"]],"start1":1110,"start2":1110,"length1":24,"length2":25},{"diffs":[[0,"mage = '"],[1,"/"],[0,"images/c"]],"start1":1165,"start2":1165,"length1":16,"length2":17}]],"length":11599,"saved":false}}}